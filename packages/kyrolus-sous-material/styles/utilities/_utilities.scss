// @use "sass:math";
@use "../abstracts/variables" as *;
// _variables.scss

$position-values: (
  static: static,
  relative: relative,
  absolute: absolute,
  fixed: fixed,
  sticky: sticky,
);

$z-index-values: (
  auto: auto,
  0: 0,
  1: 1,
  10: 10,
  100: 100,
  1000: 1000,
);
$overflow-values: (
  visible: visible,
  hidden: hidden,
  scroll: scroll,
  auto: auto,
);

$overflow-x-values: (
  visible: visible,
  hidden: hidden,
  scroll: scroll,
  auto: auto,
);

$overflow-y-values: (
  visible: visible,
  hidden: hidden,
  scroll: scroll,
  auto: auto,
);
$position-offsets: (
  0: 0,
  1: 0.25rem,
  2: 0.5rem,
  3: 1rem,
  4: 1.5rem,
  5: 3rem,
  full: 100%,
  auto: auto,
);
// _mixins.scss

@mixin generate-position-classes {
  @each $name, $value in $position-values {
    .position-#{$name} {
      position: #{$value} !important;
    }
  }
}
@mixin generate-position-offset-classes {
  @each $direction in top, right, bottom, left {
    @each $size-name, $size-value in $position-offsets {
      .#{$direction}-#{$size-name} {
        #{$direction}: #{$size-value} !important;
      }
    }
  }
}
@mixin generate-z-index-classes {
  @each $name, $value in $z-index-values {
    .z-#{$name} {
      z-index: #{$value} !important;
    }
  }
}
@mixin generate-overflow-classes {
  @each $name, $value in $overflow-values {
    .overflow-#{$name} {
      overflow: #{$value} !important;
    }
  }
}
@mixin generate-overflow-axis-classes {
  @each $axis, $values in (x: $overflow-x-values, y: $overflow-y-values) {
    @each $name, $value in $values {
      .overflow-#{$axis}-#{$name} {
        overflow-#{$axis}: #{$value} !important;
      }
    }
  }
}
@mixin generate-position-classes-responsive {
  @each $breakpoint, $breakpoint-value in $breakpoints {
    @media (min-width: #{$breakpoint-value}) {
      @each $name, $value in $position-values {
        .#{$breakpoint}-pos-#{$name} {
          position: #{$value} !important;
        }
      }
    }
  }
}

@mixin generate-position-offset-classes-responsive {
  @each $breakpoint, $breakpoint-value in $breakpoints {
    @media (min-width: #{$breakpoint-value}) {
      @each $direction in top, right, bottom, left {
        @each $size-name, $size-value in $position-offsets {
          .#{$breakpoint}-#{$direction}-#{$size-name} {
            #{$direction}: #{$size-value} !important;
          }
        }
      }
    }
  }
}

@mixin generate-z-index-classes-responsive {
  @each $breakpoint, $breakpoint-value in $breakpoints {
    @media (min-width: #{$breakpoint-value}) {
      @each $name, $value in $z-index-values {
        .#{$breakpoint}-z-#{$name} {
          z-index: #{$value} !important;
        }
      }
    }
  }
}
@mixin generate-overflow-classes-responsive {
  @each $breakpoint, $breakpoint-value in $breakpoints {
    @media (min-width: #{$breakpoint-value}) {
      @each $name, $value in $overflow-values {
        .#{$breakpoint}-overflow-#{$name} {
          overflow: #{$value} !important;
        }
      }
    }
  }
}

@mixin generate-overflow-axis-classes-responsive {
  @each $breakpoint, $breakpoint-value in $breakpoints {
    @media (min-width: #{$breakpoint-value}) {
      @each $axis, $values in (x: $overflow-x-values, y: $overflow-y-values) {
        @each $name, $value in $values {
          .#{$breakpoint}-overflow-#{$axis}-#{$name} {
            overflow-#{$axis}: #{$value} !important;
          }
        }
      }
    }
  }
}
@include generate-position-classes;
@include generate-position-offset-classes;
@include generate-z-index-classes;

// توليد فئات Overflow غير الاستجابية
@include generate-overflow-classes;
@include generate-overflow-axis-classes;

// توليد الفئات الاستجابية لـ Position
@include generate-position-classes-responsive;
@include generate-position-offset-classes-responsive;
@include generate-z-index-classes-responsive;

// توليد الفئات الاستجابية لـ Overflow
@include generate-overflow-classes-responsive;
@include generate-overflow-axis-classes-responsive;
// //padding
// @include utility("p", $default-padding, "padding");
// @include utility("pl", $default-padding, "padding-left");
// @include utility("pr", $default-padding, "padding-right");
// @include utility("pb", $default-padding, "padding-bottom");
// @include utility("pt", $default-padding, "padding-top");
// @include utility_with_2_properties("py", $default-padding, "padding-top", "padding-bottom");
// @include utility_with_2_properties("px", $default-padding, "padding-left", "padding-right");
// //margin
// @include utility("m", $default-margin, "margin");
// @include utility("mt", $default-margin, "margin-top");
// @include utility("mr", $default-margin, "margin-right");
// @include utility("ml", $default-margin, "margin-left");
// @include utility("mb", $default-margin, "margin-bottom");
// @include utility_with_2_properties("my", $default-margin, "margin-top", "margin-bottom");
// @include utility_with_2_properties("mx", $default-margin, "margin-left", "margin-right");
// //width
// // @mixin utility($prfix, $defaultValue, $cssClass, $devisionFactor: $defaultFactor, $optionalPrefix: 0, $numberOfValues: $numberOfValues) {

// @include utility("w", 1rem, "width", 0.2, 0, 30);
// @include utility("w-p", 100%, "width", 0.1, 100);
// @include utility("min-w", 1rem, "min-width", 0.2, 0, 30);
// @include utility("min-w-p", 100%, "min-width", 0.1, 100);
// @include utility("vw", 100vw, "width", 0.1, 100);
// .w-fit-content {
//   width: fit-content !important;
// }
// //height
// @include utility("h", 1rem, "height");
// @include utility("h-p", 100%, "height", 0.1, 100);
// @include utility("min-h", 1rem, "min-height");
// @include utility("min-h-p", 100%, "min-height", 0.1, 100);
// @include utility("vh", 100vw, "height", 0.1, 100);

// //font-size
// @include utility("fs", 1rem, "font-size", 0.5);

// //border
// // @include utility_with_4_sides("border", 1rem, border, "", 0.1);

// //opacity
// @include utility("opacity", 1, "opacity", 0.1, 10);

// //z-index
// @include utility("z", 10, "z-index", 100, 10, 5);

// //square
// @include utility_with_2_properties("square", 100px, "width", "height", 1, 100);

// $utilities: (
//   "border": (
//     "prefix": "b",
//     "values": (
//       "none": none,
//     ),
//   ),
//   "border-radius": (
//     "prefix": "br",
//     "values": (
//       "pill": 50rem,
//       "full": 50%,
//     ),
//   ),
//   "border-top-left-radius": (
//     "prefix": "br-tl",
//     "values": (
//       "pill": 50rem,
//       "full": 50%,
//     ),
//   ),
//   "border-bottom-left-radius": (
//     "prefix": "br-bl",
//     "values": (
//       "pill": 50rem,
//       "full": 50%,
//     ),
//   ),
//   "border-bottom-right-radius": (
//     "prefix": "br-br",
//     "values": (
//       "pill": 50rem,
//       "full": 50%,
//     ),
//   ),
//   "border-top-right-radius": (
//     "prefix": "br-tr",
//     "values": (
//       "pill": 50rem,
//       "full": 50%,
//     ),
//   ),
//   "border-style": (
//     "prefix": "bs",
//     "values": (
//       "solid": solid,
//       "dashed": dashed,
//       "dotted": dotted,
//       "double": double,
//       "none": none,
//     ),
//   ),
//   "border-bottom-style": (
//     "prefix": "bs-b",
//     "values": (
//       "solid": solid,
//       "dashed": dashed,
//       "dotted": dotted,
//       "double": double,
//       "none": none,
//     ),
//   ),
//   "border-top-style": (
//     "prefix": "bs-t",
//     "values": (
//       "solid": solid,
//       "dashed": dashed,
//       "dotted": dotted,
//       "double": double,
//       "none": none,
//     ),
//   ),
//   "border-left-style": (
//     "prefix": "bs-l",
//     "values": (
//       "solid": solid,
//       "dashed": dashed,
//       "dotted": dotted,
//       "double": double,
//       "none": none,
//     ),
//   ),
//   "border-right-style": (
//     "prefix": "bs-r",
//     "values": (
//       "solid": solid,
//       "dashed": dashed,
//       "dotted": dotted,
//       "double": double,
//       "none": none,
//     ),
//   ),
//   "display": (
//     "prefix": "d",
//     "values": (
//       "none": none,
//       "inline": inline,
//       "inline-block": inline-block,
//       "block": block,
//       "table": table,
//       "table-cell": table-cell,
//       "table-row": table-row,
//       "flex": flex,
//       "inline-flex": inline-flex,
//       "grid": grid,
//       "inline-grid": inline-grid,
//       "contents": contents,
//       "revert": revert,
//       "list-item": list-item,
//       "initial": initial,
//       "inherit": inherit,
//       "unset": unset,
//     ),
//   ),
//   "flex-direction": (
//     "prefix": "flex",
//     "values": (
//       "row": row,
//       "row-reverse": row-reverse,
//       "column": column,
//       "column-reverse": column-reverse,
//     ),
//   ),
//   "flex-wrap": (
//     "prefix": "flex",
//     "values": (
//       "wrap": wrap,
//       "wrap-reverse": wrap-reverse,
//       "nowrap": nowrap,
//     ),
//   ),
//   "justify-content": (
//     "prefix": "justify-content",
//     "values": (
//       "start": flex-start,
//       "end": flex-end,
//       "center": center,
//       "between": space-between,
//       "around": space-around,
//       "evenly": space-evenly,
//     ),
//   ),
//   "align-items": (
//     "prefix": "align-items",
//     "values": (
//       "start": flex-start,
//       "end": flex-end,
//       "center": center,
//       "baseline": baseline,
//       "stretch": stretch,
//     ),
//   ),
//   "align-content": (
//     "prefix": "align-content",
//     "values": (
//       "start": flex-start,
//       "end": flex-end,
//       "center": center,
//       "between": space-between,
//       "around": space-around,
//       "stretch": stretch,
//     ),
//   ),
//   "align-self": (
//     "prefix": "align-self",
//     "values": (
//       "auto": auto,
//       "start": flex-start,
//       "end": flex-end,
//       "center": center,
//       "baseline": baseline,
//       "stretch": stretch,
//     ),
//   ),
//   "flex-grow": (
//     "prefix": "flex-grow",
//     "values": (
//       "0": 0,
//       "1": 1,
//     ),
//   ),
//   "flex-shrink": (
//     "prefix": "flex-shrink",
//     "values": (
//       "0": 0,
//       "1": 1,
//     ),
//   ),
//   "flex-basis": (
//     "prefix": "flex-basis",
//     "values": (
//       "auto": auto,
//       "0": 0,
//       "1": 1,
//       "2": 2,
//       "3": 3,
//       "4": 4,
//       "5": 5,
//       "6": 6,
//       "7": 7,
//       "8": 8,
//       "9": 9,
//       "10": 10,
//     ),
//   ),
//   "flex": (
//     "prefix": "flex-fill",
//     "values": (
//       "fill": 1 1 auto,
//     ),
//   ),
//   "font-weight": (
//     "prefix": "fw",
//     "values": (
//       "100": 100,
//       "200": 200,
//       "300": 300,
//       "400": 400,
//       "500": 500,
//       "600": 600,
//       "700": 700,
//       "800": 800,
//       "900": 900,
//       "bold": bold,
//       "bolder": bolder,
//       "lighter": lighter,
//       "normal": normal,
//     ),
//   ),
//   "font-style": (
//     "prefix": "f-style",
//     "values": (
//       "italic": italic,
//       "normal": normal,
//     ),
//   ),
//   "text-align": (
//     "prefix": "text",
//     "values": (
//       "left": left,
//       "right": right,
//       "center": center,
//       "justify": justify,
//     ),
//   ),
//   "text-decoration": (
//     "prefix": "text-decoration",
//     "values": (
//       "underline": underline,
//       "line-through": line-through,
//       "none": none,
//     ),
//   ),
//   "text-transform": (
//     "prefix": "text-transform",
//     "values": (
//       "uppercase": uppercase,
//       "lowercase": lowercase,
//       "capitalize": capitalize,
//       "none": none,
//     ),
//   ),
//   "text-overflow": (
//     "prefix": "text-overflow",
//     "values": (
//       "clip": clip,
//       "ellipsis": ellipsis,
//     ),
//   ),
//   "white-space": (
//     "prefix": "white-space",
//     "values": (
//       "normal": normal,
//       "nowrap": nowrap,
//       "pre": pre,
//       "pre-line": pre-line,
//       "pre-wrap": pre-wrap,
//     ),
//   ),
//   "overflow": (
//     "prefix": "overflow",
//     "values": (
//       "auto": auto,
//       "hidden": hidden,
//       "scroll": scroll,
//       "visible": visible,
//       "clip": clip,
//     ),
//   ),
//   "overflow-x": (
//     "prefix": "overflow-x",
//     "values": (
//       "auto": auto,
//       "hidden": hidden,
//       "scroll": scroll,
//       "visible": visible,
//       "clip": clip,
//     ),
//   ),
//   "overflow-y": (
//     "prefix": "overflow-y",
//     "values": (
//       "auto": auto,
//       "hidden": hidden,
//       "scroll": scroll,
//       "visible": visible,
//       "clip": clip,
//     ),
//   ),
//   "position": (
//     "prefix": "position",
//     "values": (
//       "static": static,
//       "relative": relative,
//       "absolute": absolute,
//       "fixed": fixed,
//       "sticky": sticky,
//     ),
//   ),
//   "outline": (
//     "prefix": "outline",
//     "values": (
//       "none": none,
//       "0": 0,
//       "1": 1px auto,
//       "2": 2px auto,
//       "3": 3px auto,
//       "4": 4px auto,
//     ),
//   ),
//   "cursor": (
//     "prefix": "cursor",
//     "values": (
//       "pointer": pointer,
//       "default": default,
//       "help": help,
//       "move": move,
//       "progress": progress,
//       "wait": wait,
//       "text": text,
//       "crosshair": crosshair,
//       "not-allowed": not-allowed,
//       "grab": grab,
//       "grabbing": grabbing,
//       "zoom-in": zoom-in,
//       "zoom-out": zoom-out,
//       "auto": auto,
//     ),
//   ),
//   "pointer-events": (
//     "prefix": "pointer-events",
//     "values": (
//       "none": none,
//       "auto": auto,
//       "visiblePainted": visiblePainted,
//       "visibleFill": visibleFill,
//       "visibleStroke": visibleStroke,
//       "visible": visible,
//       "painted": painted,
//       "fill": fill,
//       "stroke": stroke,
//       "all": all,
//       "inherit": inherit,
//       "initial": initial,
//       "unset": unset,
//       "revert": revert,
//       "revert-layer": revert,
//     ),
//   ),
// );

// // generate utility classes
// @each $property, $map in $utilities {
//   $prefix: map-get($map, "prefix");
//   $values: map-get($map, "values");

//   @each $k, $v in $values {
//     .#{$prefix}-#{$k} {
//       #{$property}: $v;
//     }
//   }
// }

// @for $i from 1 through 10 {
//   .h-exact-#{$i*10} {
//     height: #{$i * 10}px;
//   }
// }

// @for $i from 1 through 10 {
//   .h-exact-#{($i*10) + 5} {
//     height: #{($i * 10) + 5}px;
//   }
// }

// @each $break-point, $break-point-value in $break-points {
//   @media screen and (min-width: $break-point-value) {
//     @each $property, $map in $utilities {
//       $prefix: map-get($map, "prefix");
//       $values: map-get($map, "values");

//       @each $k, $v in $values {
//         .#{$prefix}-#{$break-point}-#{$k} {
//           #{$property}: $v;
//         }
//       }
//     }
//   }
// }

// .top-0 {
//   top: 0;
// }

// .left-0 {
//   left: 0;
// }

// .right-0 {
//   right: 0;
// }

// .bottom-0 {
//   bottom: 0;
// }

// .placeholder-transparent {
//   &::-webkit-input-placeholder {
//     color: transparent;
//   }

//   &:-moz-placeholder {
//     color: transparent;
//   }

//   &::-moz-placeholder {
//     color: transparent;
//   }

//   &:-ms-input-placeholder {
//     color: transparent;
//   }

//   &::-ms-input-placeholder {
//     color: transparent;
//   }

//   &::placeholder {
//     color: transparent;
//   }
// }

// .form-field-height {
//   height: 28px;
// }

// .overflow-y-hidden {
//   overflow-y: hidden;
// }
// //border-radius
// @include utility_with_4_Corners("br", 1rem, border, radius);

// @include utility("br", 1rem, "border-radius", 0.2, 0, 7);
// @include utility("br-tl", 1rem, "border-top-left-radius", 0.2, 0, 7);
// @include utility("br-tr", 1rem, "border-top-right-radius", 0.2, 0, 7);
// @include utility("br-bl", 1rem, "border-bottom-left-radius", 0.2, 0, 7);
// @include utility("br-br", 1rem, "border-bottom-right-radius", 0.2, 0, 7);

// //border-width
// @include utility_with_4_sides("bw", 1rem, border, width, 0.1);
